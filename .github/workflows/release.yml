name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        TAG_NAME: ${{ github.ref_name }}
    strategy:
      matrix:
        include:
          - os: darwin
            arch: arm64
            asset_name: review-mac-arm
            asset_ext: ""
          - os: darwin
            arch: amd64
            asset_name: review-mac-intel
            asset_ext: ""
          - os: linux
            arch: amd64
            asset_name: review-linux-intel
            asset_ext: ""
          - os: windows
            arch: amd64
            asset_name: review-windows
            asset_ext: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17' # specify the Go version

      - name: Extract tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build binary
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags="-s -w" -o ${{ matrix.asset_name }}-${{ env.TAG_NAME }}${{ matrix.asset_ext }} review.go

      - name: Create GitHub Release
        if: matrix.os == 'linux' && matrix.arch == 'amd64'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./{{ matrix.asset_name }}-${{ env.TAG_NAME }}${{ matrix.asset_ext }}
          asset_name: ${{ matrix.asset_name }}-${{ env.TAG_NAME }}${{ matrix.asset_ext }}
          asset_content_type: application/octet-stream
